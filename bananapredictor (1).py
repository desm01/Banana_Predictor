# -*- coding: utf-8 -*-
"""BananaPredictor.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KA6viXFtHNKk8WsrTAliEk7Ur7-KaIWT

Import the fastai library
"""

from fastai.vision import *
from google.colab import drive

"""Mount the Google Drive"""

drive.mount('/content/gdrive')

"""Create a folder to store the banana pictures"""

folder = 'banana'
file = 'banana.csv'

"""Create a folder to store the food pictures"""

folder = 'food'
file = 'food.csv'

"""This gets the folders in the correct hierarchy"""

path = Path('/content/gdrive/My Drive/foodIdentifier/')
dest = path/folder
dest.mkdir(parents=True, exist_ok=True)

"""List all the files to make sure it worked"""

path.ls()

"""Download all the food and banana images from Google search"""

classes = ['food','banana']

download_images(path/file, dest, max_pics=200)

download_images(path/file, dest, max_pics=200, max_workers=0)

"""Print the images"""

for c in classes:
    print(c)
    verify_images(path/c, delete=True, max_size=500)

"""Normalise all the images to the same size"""

np.random.seed(42)
data = ImageDataBunch.from_folder(path, train=".", valid_pct=0.2,
        ds_tfms=get_transforms(), size=224, num_workers=4).normalize(imagenet_stats)

"""Show some random images to validate that everything has worked"""

data.show_batch(rows=3, figsize=(7,8))

"""Start training the nueral network"""

learn = cnn_learner(data, models.resnet34, metrics=error_rate)

learn.fit_one_cycle(4)

"""Save the current training session"""

learn.save('stage-1')

"""Retrain with the correct epochs"""

learn.fit_one_cycle(2, max_lr=slice(3e-5,3e-4))

"""Save the second well trained neural network"""

learn.save('stage-2')

learn.export()

defaults.device = torch.device('cpu')

"""Import an image from Google Drive and check if the image is a banana or not"""

img = open_image(path/'ban.jpg')

learn = load_learner(path)

"""Make the prediction and display it"""

pred_class,pred_idx,outputs = learn.predict(img)
pred_class